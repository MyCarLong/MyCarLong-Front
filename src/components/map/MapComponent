import React, { useState, useEffect } from 'react';
import { GoogleMap, LoadScript, Marker, Circle } from '@react-google-maps/api';
import Slider from '@mui/material/Slider';

const containerStyle = {
  width: '100%',
  height: '400px'
};

const defaultCenter = { lat: 37.5665, lng: 126.9780 }; 

function MapComponent() {
  const [radius, setRadius] = useState(1000); 
  const [location, setLocation] = useState(defaultCenter);
  const [map, setMap] = useState(null);

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        function(position) {
          setLocation({
            lat: position.coords.latitude,
            lng: position.coords.longitude
          });
        },
        function(error) {
          console.error("Error Code = " + error.code + " - " + error.message);
        }
      );
    }
  }, []);

  const onLoad = React.useCallback(function callback(map) {
    const bounds = new window.google.maps.LatLngBounds();
    map.fitBounds(bounds);
    setMap(map);
  }, []);

  const onUnmount = React.useCallback(function callback(map) {
    setMap(null);
  }, []);

  const handleRadiusChange = (event, newValue) => {
    setRadius(newValue);
  };

  return (
    <LoadScript
      googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}
    >
      <GoogleMap
        mapContainerStyle={containerStyle}
        center={location}
        zoom={14}
        onLoad={onLoad}
        onUnmount={onUnmount}
      >
        <Marker position={location} />

        <Circle
          center={location}
          radius={radius}
          options={{
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#FF0000',
            fillOpacity: 0.35,
          }}
        />
      </GoogleMap>
      <div style={{ margin: '20px' }}>
        <Slider
          value={radius}
          onChange={handleRadiusChange}
          aria-labelledby="continuous-slider"
          min={1000}
          max={5000}
          step={1000}
          valueLabelDisplay="auto"
          marks
          getAriaValueText={(value) => `${value} meters`}
        />
      </div>
    </LoadScript>
  );
}

export default React.memo(MapComponent);
